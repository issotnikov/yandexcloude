terraform {
  required_providers {
    yandex = {
      source = "yandex-cloud/yandex"
    }
  }
}

provider "yandex" {


#  cloud_id  = var.cloud_id
#  folder_id = var.folder_id
#  token     = var.token
  zone      = "ru-central1-a"
}


resource "yandex_compute_instance" "vm-1" {
  name = "openvpn"

  resources {
    cores  = 2
    memory = 2
  }

  boot_disk {
    initialize_params {
      image_id = "fd8ek46toefl9gcdql5d"
    }
  }

  network_interface {
    subnet_id = yandex_vpc_subnet.subnet0.id
    nat       = true
  }

metadata = {
    user-data = "${file("/opt/terraform/yandex/vr.txt")}"
 }


}

resource "yandex_compute_instance" "vm-2" {
  name = "vm-2"

  resources {
    cores  = 2
    memory = 2
  }

  boot_disk {
    initialize_params {
      image_id = "fd80viupr3qjr5g6g9du"
    }
  }

  network_interface {
    subnet_id = yandex_vpc_subnet.subnet0.id
    nat       = false
  }

metadata = {
    user-data = "${file("/opt/terraform/yandex/vr.txt")}"
 }


}

resource "yandex_compute_instance" "vm-3" {
  name = "vm-3"

  resources {
    cores  = 2
    memory = 2
  }

  boot_disk {
    initialize_params {
      image_id = "fd80viupr3qjr5g6g9du"
    }
  }

  network_interface {
    subnet_id = yandex_vpc_subnet.subnet0.id
    nat       = false
  }

metadata = {
    user-data = "${file("/opt/terraform/yandex/vr.txt")}"
 }


}

resource "yandex_vpc_network" "network0" {
  name = "network0"
}

resource "yandex_vpc_subnet" "subnet0" {
  name           = "subnet0"
  zone           = "ru-central1-a"
  network_id     = yandex_vpc_network.network0.id
  v4_cidr_blocks = ["192.168.10.0/24"]
 }


